# ~/.bashrc - user-specific Bash settings
#
# This file is sourced by all *interactive* bash shells on startup,
# including some apparently interactive shells such as scp and rcp
# that can't tolerate any output.  So make sure this doesn't display
# anything or bad things will happen !


# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
    # Shell is non-interactive.  Be done now!
    return
fi


# Put your fun stuff here.


# The pattern "**" used in a pathname expansion context will match
# all files and zero or more directories and subdirectories.
shopt -s globstar

# Setup a useful history
export HISTCONTROL=ignoreboth
export HISTFILESIZE=-1
export HISTSIZE=-1

# Source functions
if [[ -d ~/.bash_functions ]]; then
    for f in ~/.bash_functions/*; do
        [[ -x "$f" ]] && . "$f"
    done
fi

# Password store settings
export PASSWORD_STORE_ENABLE_EXTENSIONS="true"
export PASSWORD_STORE_SIGNING_KEY="06C4FDF48B857706FDB4EE2E7427A13D9B5B7471"
export TERMUX_PASS_OKC_GPG=1  # own addition to pass

export PATH=$HOME/.local/opt/org.rizinorg.rizininstaller/bin:$HOME/.cargo/bin:$HOME/.local/bin:$PATH

# `pip3 install unicorn` fails w/o `apt install unicorn` & this
export LIBUNICORN_PATH=/data/data/com.termux/files/usr/lib/libunicorn.so

eval "$(starship init bash)"

# Setup some useful aliases
[[ -f ~/.bash_aliases ]] && . ~/.bash_aliases

# Greet the user
[[ -f ~/.bash_greetings ]] && . ~/.bash_greetings
echo
echo 'Use `okc-gpg` for GPG operations through OpenKeychain.'
