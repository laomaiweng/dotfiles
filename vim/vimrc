" ~/.vimrc
" User-specific vim settings

"" Key bindings
" <F1>:  Help
" <F2>:  Toggle paste mode
" <F3>:  Toggle light/dark background
" <F5>:  Toggle tag bar
" <F7>:  Toggle undo tree
" <F11>: Execute current buffer
" <F12>: Toggle mouse ownership


" Change the mapleader
let mapleader = ";"

" Setup the Solarized theme
if has('gui_running')
    set background=light
else
    set background=dark
endif
colorscheme solarized

" F1-12 key bindings
set pastetoggle=<F2>
call togglebg#map("<F3>")
nnoremap <F5> :Tagbar<CR>
nnoremap <F7> :GundoToggle<CR>

" Display tabs and trailing spaces
set list
set listchars=nbsp:¤,tab:\|\ ,trail:•
highlight SpecialKey ctermfg=Black

" Highlight the current line
set cursorline

" Navigate the buffers
nmap gb :bnext<CR>
nmap gB :bprevious<CR>

" Clear the current search with ;/
nmap <silent> <leader>/ :nohlsearch<CR>

" Use w!! when you forgot to 'sudo vi'
cmap w!! w !sudo tee % >/dev/null
cmap w$$ w !sudo tee % >/dev/null

" Map \ev and \sv to edit/reload your vimrc
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

" cscope options
if has("cscope")
    set cscopetagorder=0    " 0: search cscope then tags; 1: search tags then cscope
    set cscopetag           " use :cstag instead of :tag
    set nocscopeverbose     " hide database loading error messages (for the next few lines)
    if filereadable("cscope.out")
        cscope add cscope.out
    elseif $CSCOPE_DB != ""
        cscope add $CSCOPE_DB
    endif
    set nocscopeverbose     " restore database loading error messages
endif
" g[ / cscope find s: find C symbol under cursor
" g) / cscope find d: find functions called by function under cursor
" g( / cscope find c: find functions calling function under cursor
" g» / cscope find f: find file under cursor
" g« / cscope find i: find file #including file under cursor
nmap g[ :cscope find s <C-R>=expand("<cword>")<CR><CR>
nmap g) :cscope find d <C-R>=expand("<cword>")<CR><CR>
nmap g( :cscope find c <C-R>=expand("<cword>")<CR><CR>
nmap g» :cscope find f <C-R>=expand("<cword>")<CR><CR>
nmap g« :cscope find i ^<C-R>=expand("<cfile>")<CR>$<CR>

" airline options
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_exclude_preview = 1

" syntastic options
"let g:syntastic_tcl_nagelfar_args = "-s /usr/share/nagelfar-1.2/syntaxdb86.tcl"

" yankring options
let g:yankring_history_dir = '$HOME/.vim'
if has("autocmd")
  " Disable yankring for encrypted files
  autocmd BufNewFile,BufReadCmd *.\(gpg\|asc\|pgp\) let g:yankring_enabled = 0
endif

" gundo options
let g:gundo_right = 1
let g:gundo_help = 0

" gist options
let g:gist_clip_command = 'xclip -selection clipboard'
let g:gist_detect_filetype = 1

" CtrlSpace options
set hidden

