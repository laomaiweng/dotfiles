# bash completion for `llm`

_llm() {
    local cur prev words cword
    _init_completion -n : || return

    case "$prev" in
        -m|--model)
            # XXX: There may be other model types than "OpenAI Chat"
            local models
            mapfile -t models < <(llm models | sed -n -e 's/^OpenAI Chat: //p')
            mapfile -t COMPREPLY < <(compgen -W "${models[*]@Q}" -- "$cur")
            __ltrim_colon_completions "$cur"
            ;;

        -f|--fragment)
            _filedir
            ;;

        -t|--template)
            local loader arg
            IFS=: read -r loader arg <<<"$cur"

            if [[ "$cur" != *:* ]]; then
                # No colon, either the user is typing the loader name, or they're going straight for a filename
                if [[ "$cur" == */* ]]; then
                    _filedir
                else
                    local loaders
                    mapfile -t loaders < <(llm templates loaders | sed -n -e 's/^\([^ :]\+\):$/\1/p')
                    mapfile -t COMPREPLY < <(compgen -W "${loaders[*]}" -S : -- "$cur")

                    if (( ${#COMPREPLY[@]} > 0 )); then
                        # Got loader completions, don't append a space to let the user type in the loader arg
                        compopt -o nospace
                    else
                        # No loader completions, attempt file completion
                        _filedir
                    fi
                fi

            elif [[ "$loader" != */* ]]; then
                # Got a loader name, complete $arg as a file
                cur="$arg"
                _filedir

            else
                # Loader name looks like a filename, complete as a file
                _filedir
            fi
            ;;
    esac
}

complete -F _llm llm

# vim: ft=bash
