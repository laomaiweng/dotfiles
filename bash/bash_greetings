# ~/.bash_greetings
#
# Commands run on every new Bash shell to make the user feel at ease.


# Don't display the greetings if the NOGREET variable is set
if [[ ! -v NOGREET ]]
then
    # Get host information
    cpu_name="$(sed -n -e '/^model name/ { s/^model name[[:space:]]*: //p ; Q }' /proc/cpuinfo)"
    cpu_num="$(grep '^processor' /proc/cpuinfo | wc -l)"
    mem_main="$(free -m | sed -n -e '/^Mem:/ s/Mem:[[:space:]]*\([^[:space:]]\+\).*/\1/p' -)"
    mem_swap="$(free -m | sed -n -e '/^Swap:/ s/Swap:[[:space:]]*\([^[:space:]]\+\).*/\1/p' -)"
    uname="$(uname -a)"

    # Clear the screen
    clear
    echo
    # Print host information
    echo -e "\E[01;33mHost:\E[00m $uname"
    [[ -f /proc/cpuinfo ]] && echo -e "\E[01;33mCPU: \E[00m $cpu_name   ($cpu_num logical CPUs)"
    echo -e "\E[01;33mMem: \E[00m $mem_main MB   (+ $mem_swap MB swap)"
    echo
    # Print the display
    echo -e "\E[01;31mDisplay:\E[00m $DISPLAY"
    echo
    # Print a fortune-telling cow
    if [[ -n "$(command -v fortune)" && -n "$(command -v cowrand)" ]]
    then
        fortune | cowrand -n
        echo
    fi
    # Print current directory
    echo -e "   \E[01;37m$(pwd):\E[00m"
    ls --color
    echo
    # Print todo-list (if any) for this directory
    if [[ -f ./TODO ]]
    then
        if ! echo "$(file -L ./TODO)" | grep -q "XML"    # 'tudu' uses XML todos, rule those out
        then
            echo -e "   \E[01;37mTODO:\E[00m"
            echo -e "$(sed -e 's/^\(\*\+\)/\\E[01;33m\1\\E[00m/' TODO)"
            echo
        fi
    fi

    # Fight environment pollution
    unset cpu_name cpu_num mem_main mem_swap uname

    # Prevent subsequent shells from greeting the user
    export NOGREET=
fi

# Set up an alias to display the greetings again/anyway
alias greetings='unset NOGREET ; source ~/.bash_greetings'


# vim:ft=sh
